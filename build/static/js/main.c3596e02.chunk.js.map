{"version":3,"sources":["components/Header.js","components/TempInput.js","components/TempReset.js","components/TempCalc.js","App.js","index.js"],"names":["Header","props","className","title","TempInput","for","type","name","id","value","onChange","convertTemp","TempReset","onClick","resetTemps","buttonText","TempCalc","useState","celsius","fahrenheit","kelvin","temp","updateTemp","e","target","toFixed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAIeA,EAFA,SAACC,GAAD,OAAW,wBAAIC,UAAU,iBAAiBD,EAAME,Q,OCqBhDC,EArBG,SAACH,GACjB,OACE,yBAAKC,UAAU,eACb,2BAAOA,UAAU,cAAcG,IAAG,UAAKJ,EAAMK,KAAX,WAC/BL,EAAMK,MAET,yBAAKJ,UAAU,iBACb,2BACEA,UAAU,cACVI,KAAK,SACLC,KAAI,UAAKN,EAAMK,KAAX,UACJE,GAAE,UAAKP,EAAMK,KAAX,UACFG,MAAOR,EAAMQ,MACbC,SAAUT,EAAMU,cAElB,0BAAMT,UAAU,kBCTTU,EANG,SAACX,GAAD,OAChB,4BAAQC,UAAU,YAAYW,QAASZ,EAAMa,YAC1Cb,EAAMc,aCoCIC,EApCE,WAAO,IAAD,EACMC,oBAAS,iBAAO,CAAEC,QAAS,EAAGC,WAAY,EAAGC,OAAQ,MAD3D,mBACdC,EADc,KACRC,EADQ,KA0BrB,OACE,yBAAKpB,UAAU,cACb,kBAAC,EAAD,CAAWI,KAAK,UAAUG,MAAOY,EAAKH,QAASP,YAzBxB,SAACY,GAAD,OACzBD,EAAW,CACTJ,SAAUK,EAAEC,OAAOf,MACnBU,YAA+B,KAAjBI,EAAEC,OAAOf,MAAc,IAAIgB,QAAQ,GACjDL,SAAUG,EAAEC,OAAOf,MAAQ,QAAQgB,QAAQ,QAsB3C,kBAAC,EAAD,CAAWnB,KAAK,aAAaG,MAAOY,EAAKF,WAAYR,YAnB3B,SAACY,GAAD,OAC5BD,EAAW,CACTJ,WAAYK,EAAEC,OAAOf,MAAQ,IAAM,KAAKgB,QAAQ,GAChDN,YAAaI,EAAEC,OAAOf,MACtBW,UAAWG,EAAEC,OAAOf,MAAQ,IAAM,IAAM,QAAQgB,QAAQ,QAgBxD,kBAAC,EAAD,CAAWnB,KAAK,SAASG,MAAOY,EAAKD,OAAQT,YAbvB,SAACY,GAAD,OACxBD,EAAW,CACTJ,UAAWK,EAAEC,OAAOf,MAAQ,QAAQgB,QAAQ,GAC5CN,YAA0C,MAA3BI,EAAEC,OAAOf,MAAQ,QAAgB,IAAIgB,QAAQ,GAC5DL,QAASG,EAAEC,OAAOf,WAUlB,kBAAC,EAAD,CAAWM,WAAW,QAAQD,WAPf,kBAAMQ,EAAW,CAAEJ,QAAS,EAAGC,WAAY,EAAGC,OAAQ,SCd5DM,G,KATH,WACV,OACE,yBAAKxB,UAAU,QACb,kBAAC,EAAD,CAAQC,MAAM,0BACd,kBAAC,EAAD,SCLNwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c3596e02.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => <h1 className='temp__heading'>{props.title}</h1>;\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst TempInput = (props) => {\r\n  return (\r\n    <div className='temp__group'>\r\n      <label className='temp__label' for={`${props.type}-input`}>\r\n        {props.type}\r\n      </label>\r\n      <div className='temp__wrapper'>\r\n        <input\r\n          className='temp__input'\r\n          type='number'\r\n          name={`${props.type}-input`}\r\n          id={`${props.type}-input`}\r\n          value={props.value}\r\n          onChange={props.convertTemp}\r\n        />\r\n        <span className='temp__span'></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempInput;\r\n","import React from 'react';\r\n\r\nconst TempReset = (props) => (\r\n  <button className='temp__btn' onClick={props.resetTemps}>\r\n    {props.buttonText}\r\n  </button>\r\n);\r\n\r\nexport default TempReset;\r\n","import React, { useState } from 'react';\r\nimport TempInput from './TempInput';\r\nimport TempReset from './TempReset';\r\n\r\nconst TempCalc = () => {\r\n  const [temp, updateTemp] = useState(() => ({ celsius: 0, fahrenheit: 0, kelvin: 0 }));\r\n\r\n  const convertFromCelsius = (e) =>\r\n    updateTemp({\r\n      celsius: +e.target.value,\r\n      fahrenheit: (+e.target.value * 1.8 + 32).toFixed(2),\r\n      kelvin: (+e.target.value + 273.15).toFixed(2),\r\n    });\r\n\r\n  const convertFromFahrenheit = (e) =>\r\n    updateTemp({\r\n      celsius: ((+e.target.value - 32) / 1.8).toFixed(2),\r\n      fahrenheit: +e.target.value,\r\n      kelvin: ((+e.target.value - 32) / 1.8 + 273.15).toFixed(2),\r\n    });\r\n\r\n  const convertFromKelvin = (e) =>\r\n    updateTemp({\r\n      celsius: (+e.target.value - 273.15).toFixed(2),\r\n      fahrenheit: ((+e.target.value - 273.15) * 1.8 + 32).toFixed(2),\r\n      kelvin: +e.target.value,\r\n    });\r\n\r\n  const resetTemps = () => updateTemp({ celsius: 0, fahrenheit: 0, kelvin: 0 });\r\n\r\n  return (\r\n    <div className='temp__calc'>\r\n      <TempInput type='celsius' value={temp.celsius} convertTemp={convertFromCelsius} />\r\n      <TempInput type='fahrenheit' value={temp.fahrenheit} convertTemp={convertFromFahrenheit} />\r\n      <TempInput type='kelvin' value={temp.kelvin} convertTemp={convertFromKelvin} />\r\n      <TempReset buttonText='reset' resetTemps={resetTemps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempCalc;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport TempCalc from './components/TempCalc';\nimport './scss/app.min.css';\n\nconst App = () => {\n  return (\n    <div className='temp'>\n      <Header title='temperature converter' />\n      <TempCalc />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}